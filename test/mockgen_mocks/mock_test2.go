// Code generated by MockGen. DO NOT EDIT.
// Source: project-admin/test2/mocks (interfaces: Test2Mock)

// Package mocks is a generated GoMock package.
package mockgen_mocks

import (
	types "project-admin/test2/internal/types"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTest2Mock is a mock of Test2Mock interface.
type MockTest2Mock struct {
	ctrl     *gomock.Controller
	recorder *MockTest2MockMockRecorder
}

// MockTest2MockMockRecorder is the mock recorder for MockTest2Mock.
type MockTest2MockMockRecorder struct {
	mock *MockTest2Mock
}

// NewMockTest2Mock creates a new mock instance.
func NewMockTest2Mock(ctrl *gomock.Controller) *MockTest2Mock {
	mock := &MockTest2Mock{ctrl: ctrl}
	mock.recorder = &MockTest2MockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTest2Mock) EXPECT() *MockTest2MockMockRecorder {
	return m.recorder
}

// CreateSingleMsg mocks base method.
func (m *MockTest2Mock) CreateSingleMsg(arg0 types.CreateSingleMsg) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSingleMsg", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateSingleMsg indicates an expected call of CreateSingleMsg.
func (mr *MockTest2MockMockRecorder) CreateSingleMsg(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSingleMsg", reflect.TypeOf((*MockTest2Mock)(nil).CreateSingleMsg), arg0)
}

// DeleteSingleMsg mocks base method.
func (m *MockTest2Mock) DeleteSingleMsg(arg0 types.DeleteSingleMsg) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSingleMsg", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSingleMsg indicates an expected call of DeleteSingleMsg.
func (mr *MockTest2MockMockRecorder) DeleteSingleMsg(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSingleMsg", reflect.TypeOf((*MockTest2Mock)(nil).DeleteSingleMsg), arg0)
}

// GetSingleMsg mocks base method.
func (m *MockTest2Mock) GetSingleMsg(arg0 types.GetSingleMsg) (*types.SingleMsg, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSingleMsg", arg0)
	ret0, _ := ret[0].(*types.SingleMsg)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSingleMsg indicates an expected call of GetSingleMsg.
func (mr *MockTest2MockMockRecorder) GetSingleMsg(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSingleMsg", reflect.TypeOf((*MockTest2Mock)(nil).GetSingleMsg), arg0)
}

// GetsSingleMsg mocks base method.
func (m *MockTest2Mock) GetsSingleMsg(arg0 types.GetsReq) (*types.SingleMsgList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetsSingleMsg", arg0)
	ret0, _ := ret[0].(*types.SingleMsgList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetsSingleMsg indicates an expected call of GetsSingleMsg.
func (mr *MockTest2MockMockRecorder) GetsSingleMsg(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetsSingleMsg", reflect.TypeOf((*MockTest2Mock)(nil).GetsSingleMsg), arg0)
}

// UpdateSingleMsg mocks base method.
func (m *MockTest2Mock) UpdateSingleMsg(arg0 types.UpdateSingleMsg) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSingleMsg", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSingleMsg indicates an expected call of UpdateSingleMsg.
func (mr *MockTest2MockMockRecorder) UpdateSingleMsg(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSingleMsg", reflect.TypeOf((*MockTest2Mock)(nil).UpdateSingleMsg), arg0)
}
