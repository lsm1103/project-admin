// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	OfflineMsg "project-admin/projectBuilds/t1/internal/handler/OfflineMsg"
	SingleMsg "project-admin/projectBuilds/t1/internal/handler/SingleMsg"
	"project-admin/projectBuilds/t1/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/create",
				Handler: OfflineMsg.CreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/update",
				Handler: OfflineMsg.UpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/delete",
				Handler: OfflineMsg.DeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/get",
				Handler: OfflineMsg.GetHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/gets",
				Handler: OfflineMsg.GetsHandler(serverCtx),
			},
		},
		rest.WithPrefix("/admin/OfflineMsg/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/create",
				Handler: SingleMsg.CreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/update",
				Handler: SingleMsg.UpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/delete",
				Handler: SingleMsg.DeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/get",
				Handler: SingleMsg.GetHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/gets",
				Handler: SingleMsg.GetsHandler(serverCtx),
			},
		},
		rest.WithPrefix("/admin/SingleMsg/v1"),
	)
}
